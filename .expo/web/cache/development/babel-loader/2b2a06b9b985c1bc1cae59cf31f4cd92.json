{"ast":null,"code":"var path = require('path');\nvar _require = require('electron'),\n  app = _require.app,\n  BrowserWindow = _require.BrowserWindow;\nvar isDev = require('electron-is-dev');\nfunction createWindow() {\n  var win = new BrowserWindow({\n    width: 800,\n    height: 600,\n    webPreferences: {\n      nodeIntegration: true\n    }\n  });\n  win.loadURL(isDev ? 'http://localhost:3000' : \"file://\" + path.join(__dirname, '../build/index.html'));\n  if (isDev) {\n    win.webContents.openDevTools({\n      mode: 'detach'\n    });\n  }\n}\napp.whenReady().then(createWindow);\napp.on('window-all-closed', function () {\n  if (process.platform !== 'darwin') {\n    app.quit();\n  }\n});\napp.on('activate', function () {\n  if (BrowserWindow.getAllWindows().length === 0) {\n    createWindow();\n  }\n});","map":{"version":3,"names":["path","require","app","BrowserWindow","isDev","createWindow","win","width","height","webPreferences","nodeIntegration","loadURL","join","__dirname","webContents","openDevTools","mode","whenReady","then","on","process","platform","quit","getAllWindows","length"],"sources":["/Users/struanfraser/dev/hyper-sketch/public/electron.js"],"sourcesContent":["const path = require('path');\n\nconst { app, BrowserWindow } = require('electron');\nconst isDev = require('electron-is-dev');\n\nfunction createWindow() {\n  // Create the browser window.\n  const win = new BrowserWindow({\n    width: 800,\n    height: 600,\n    webPreferences: {\n      nodeIntegration: true,\n    },\n  });\n\n  // and load the index.html of the app.\n  // win.loadFile(\"index.html\");\n  win.loadURL(\n    isDev\n      ? 'http://localhost:3000'\n      : `file://${path.join(__dirname, '../build/index.html')}`\n  );\n  // Open the DevTools.\n  if (isDev) {\n    win.webContents.openDevTools({ mode: 'detach' });\n  }\n}\n\n// This method will be called when Electron has finished\n// initialization and is ready to create browser windows.\n// Some APIs can only be used after this event occurs.\napp.whenReady().then(createWindow);\n\n// Quit when all windows are closed, except on macOS. There, it's common\n// for applications and their menu bar to stay active until the user quits\n// explicitly with Cmd + Q.\napp.on('window-all-closed', () => {\n  if (process.platform !== 'darwin') {\n    app.quit();\n  }\n});\n\napp.on('activate', () => {\n  if (BrowserWindow.getAllWindows().length === 0) {\n    createWindow();\n  }\n});"],"mappings":"AAAA,IAAMA,IAAI,GAAGC,OAAO,CAAC,MAAM,CAAC;AAE5B,eAA+BA,OAAO,CAAC,UAAU,CAAC;EAA1CC,GAAG,YAAHA,GAAG;EAAEC,aAAa,YAAbA,aAAa;AAC1B,IAAMC,KAAK,GAAGH,OAAO,CAAC,iBAAiB,CAAC;AAExC,SAASI,YAAY,GAAG;EAEtB,IAAMC,GAAG,GAAG,IAAIH,aAAa,CAAC;IAC5BI,KAAK,EAAE,GAAG;IACVC,MAAM,EAAE,GAAG;IACXC,cAAc,EAAE;MACdC,eAAe,EAAE;IACnB;EACF,CAAC,CAAC;EAIFJ,GAAG,CAACK,OAAO,CACTP,KAAK,GACD,uBAAuB,eACbJ,IAAI,CAACY,IAAI,CAACC,SAAS,EAAE,qBAAqB,CAAG,CAC5D;EAED,IAAIT,KAAK,EAAE;IACTE,GAAG,CAACQ,WAAW,CAACC,YAAY,CAAC;MAAEC,IAAI,EAAE;IAAS,CAAC,CAAC;EAClD;AACF;AAKAd,GAAG,CAACe,SAAS,EAAE,CAACC,IAAI,CAACb,YAAY,CAAC;AAKlCH,GAAG,CAACiB,EAAE,CAAC,mBAAmB,EAAE,YAAM;EAChC,IAAIC,OAAO,CAACC,QAAQ,KAAK,QAAQ,EAAE;IACjCnB,GAAG,CAACoB,IAAI,EAAE;EACZ;AACF,CAAC,CAAC;AAEFpB,GAAG,CAACiB,EAAE,CAAC,UAAU,EAAE,YAAM;EACvB,IAAIhB,aAAa,CAACoB,aAAa,EAAE,CAACC,MAAM,KAAK,CAAC,EAAE;IAC9CnB,YAAY,EAAE;EAChB;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"script"}